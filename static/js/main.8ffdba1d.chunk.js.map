{"version":3,"sources":["flash.svg","Profile.js","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Profile","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","alamat","src","width","Component","Calculator","_this","state","name","color","nilai1","nilai2","operator","hasil","_this$state","className","onSubmit","handleSumbit","bind","type","ref","value","renderHasil","e","preventDefault","parseInt","refs","setState","App","img","src_Calculator","src_Profile","nama","menu","_this2","id","items","map","index","style","concat","onClick","clicked","key","info","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8ffdba1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flash.6bad39b6.svg\";","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Profile extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  \r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n      <p>{this.props.alamat}</p>\r\n      <img src=\"tangled.jpg\" width=\"400px\"/>\r\n      </div>\r\n    );\r\n  }   \r\n} \r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Calculator extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        name : 'Calculator',\r\n        color : 'Pink',\r\n        nilai1 : null,\r\n        nilai2 : null,\r\n        operator : null,\r\n        hasil : null\r\n      }\r\n  }\r\n\r\n  renderHasil(){\r\n\r\n    const {nilai1, nilai2, operator, hasil} = this.state;\r\n\r\n    if (this.state.hasil){\r\n      return (\r\n        <div>\r\n        <p className=\"alert alert-success\">\r\n        {nilai1+operator+nilai2 +'='+hasil}\r\n        </p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n    return(\r\n        <div>\r\n          This is <span className={\"selected \" +this.state.color}>\r\n          {this.state.name}</span> <br/> <br/>\r\n          <form onSubmit={this.handleSumbit.bind(this)}>\r\n          <br />\r\n          <input type=\"number\" ref=\"nilai1\" className=\"form-conrol\"/> \r\n          <select ref=\"operator\" className=\"from-control\">\r\n          <option value=\"+\">+</option>\r\n          <option value=\"-\">-</option>\r\n          <option value=\"*\">*</option>\r\n          <option value=\"/\">/</option>\r\n          </select>\r\n          <input type=\"number\" ref=\"nilai2\" className=\"form-conrol\"/>\r\n          \r\n          <br/><br/>\r\n          <button className=\"btn btn-ptimary\">Hitung</button>\r\n          </form>\r\n          {this.renderHasil()}\r\n        </div>\r\n      );\r\n  }   \r\n\r\n\r\nhandleSumbit(e){\r\n    e.preventDefault();\r\n\r\n    const nilai1 = parseInt(this.refs.nilai1.value);\r\n    const nilai2 = parseInt(this.refs.nilai2.value);\r\n    const operator = this.refs.operator.value;\r\n\r\n    var hasil;\r\n    switch(operator){\r\n      case '+':\r\n      hasil = nilai1 + nilai2;\r\n      break;\r\n      case '-':\r\n      hasil = nilai1 - nilai2;\r\n      break;\r\n      case '*':\r\n      hasil = nilai1 * nilai2;\r\n      break;\r\n      case '/':\r\n      hasil = nilai1 / nilai2;\r\n      break;\r\n    }\r\n    this.setState({nilai1, nilai2, operator, hasil});\r\n    this.refs.nilai1.value = null;\r\n    this.refs.nilai2.value=  null;\r\n}\r\n}\r\n\r\n\r\n\r\nexport default Calculator;\r\n","import React, { Component } from 'react';\r\nimport logo from './flash.svg';\r\nimport './App.css';\r\nimport Profile from './Profile.js';\r\nimport Calculator from './Calculator.js';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      name : 'Mickey Mouse',\r\n      color : 'Merah',\r\n      img   : 'merah.jpg',\r\n      nilai1 : null,\r\n      nilai2 : null,\r\n      operator : null,\r\n      hasil : null\r\n    }\r\n  }\r\n\r\n  renderHasil(){\r\n\r\n    const {nilai1, nilai2, operator, hasil} = this.state;\r\n\r\n    if (this.state.hasil){\r\n      return (\r\n        <div>\r\n        <p className=\"alert alert-success\">\r\n        {nilai1+operator+nilai2 +'='+hasil}\r\n        </p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\ninfo(name){\r\n  if(name == 'Calculator'){\r\n    //display calculator\r\n    return<Calculator/>;\r\n      } else if(name == \"Profile\"){\r\n    //display menu profile\r\n    return <Profile nama=\"Rapunzel\"/>;\r\n  }else {\r\n    //display default\r\n    return(\r\n      <div>\r\n      This is <span className={\"selected \" +this.state.color}>\r\n          {this.state.name}</span> <br/> <br/>\r\n\r\n        <img src={this.state.img} width=\"400\"></img>\r\n      {/*{this.menusaya()} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n  clicked (menu){\r\n    //untuk memperbarui state sesuai dengan menu yang dipilih\r\n   this.setState({\r\n     name: menu.name,\r\n     color : menu.color,\r\n       img   : menu.img,\r\n   });\r\n  }\r\n\r\n  // handleSumbit(e){\r\n  //   e.preventDefault();\r\n\r\n  //   const nilai1 = parseInt(this.refs.nilai1.value);\r\n  //   const nilai2 = parseInt(this.refs.nilai2.value);\r\n  //   const operator = this.refs.operator.value;\r\n\r\n  //   var hasil;\r\n  //   switch(operator){\r\n  //     case '+':\r\n  //     hasil = nilai1 + nilai2;\r\n  //     break;\r\n  //     case '-':\r\n  //     hasil = nilai1 - nilai2;\r\n  //     break;\r\n  //     case '*':\r\n  //     hasil = nilai1 * nilai2;\r\n  //     break;\r\n  //     case '/':\r\n  //     hasil = nilai1 / nilai2;\r\n  //     break;\r\n  //   }\r\n\r\n  //   this.setState({nilai1, nilai2, operator, hasil});\r\n\r\n  //   this.refs.nilai1.value = null;\r\n  //   this.refs.nilai2.value=  null;\r\n  // }\r\n\r\n  /*menusaya(){\r\n    var gambar;\r\n    if(this.state.active.toLocaleLowerCase() === 'merah'){\r\n      gambar = \"merah\";\r\n    } else if(this.state.active.toLocaleLowerCase() === 'kuning'){\r\n      gambar = \"kuning\";\r\n    } else if(this.state.active.toLocaleLowerCase() === 'hijau'){\r\n      gambar = \"hijau\";\r\n    } else if(this.state.active.toLocaleLowerCase() === 'biru'){\r\n      gambar = \"biru\";\r\n    } \r\n\r\n    return <img src={gambar+\".jpg\"} width=\"200\"></img>\r\n  }*/\r\n  \r\n  render() {\r\n    return (\r\n      <div id=\"App\">\r\n      {/*map akan loop sebanyak menu yang di definisikan */}\r\n      {/*kemudian mengembalikan elemen <a/> */}\r\n      <nav className=\"nav\">{this.props.items.map((menu, index)  => {\r\n          var style = 'menu';\r\n          if (this.state.color === menu.color) {\r\n            style = `${style} is-active`;\r\n          } \r\n      return <div\r\n           className={style+\" \"+menu.color}\r\n          //bind untuk membuat 'menu' bisa dikirim ke fungsi 'clicked' \r\n          onClick={this.clicked.bind(this, menu)}\r\n          key={index}>\r\n          {menu.name}\r\n        </div>;\r\n        }) }\r\n      </nav>\r\n\r\n        <div className=\"info\">\r\n        {this.info(this.state.name)}\r\n        <div>\r\n      \r\n        </div>\r\n      </div>\r\n  </div>\r\n        \r\n    );\r\n  }   \r\n} \r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Custom.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst items = [\r\n    {\r\n        name  : 'Mickey Mouse',\r\n        color : 'Merah',\r\n        img   : 'merah.jpg',\r\n    },\r\n    {\r\n        name  : 'Pluto',\r\n        color : 'Kuning',\r\n        img   : 'kuning.jpg',\r\n    },\r\n    {\r\n        name  : 'Mike Wazowski',\r\n        color : 'Hijau',\r\n        img   : 'hijau.jpg',\r\n    },\r\n    {\r\n        name  : 'Sullivan',\r\n        color : 'Biru',\r\n        img   : 'biru.jpg',\r\n    }, \r\n    {\r\n        name  : 'Calculator',\r\n        color : 'Pink',\r\n        img   : '',\r\n    },\r\n    {\r\n        name  : 'Profile',\r\n        color : 'Peach',\r\n        img   : '',\r\n    },\r\n    \r\n\r\n];\r\n\r\nReactDOM.render(<App items={items}/>, document.getElementById('root'));\r\nserviceWorker.register();\r\n"],"sourceRoot":""}